using System;
using System.Collections.Generic;
using System.Text;
using System.Net;
using System.Net.Mail;


namespace System.Common.Logging
{
    /// <summary>
    /// Writes a <see cref="LogItem"/> to a smtp server
    /// </summary>
    /// <example>The following example shows how to configure the SmtpLogSink against the smtp.gmail.com server
    /// <code>
    ///  <![CDATA[
    /// <LogDotNet> 
    ///     <Sink name ="TestLogger" loglevel ="Fatal" type ="LogDotNet.SmtpLogSink, LogDotnet">
    ///         <FromAddress value ="unknowperson@unknownsite.com"/>
    ///         <ToAddress value ="support@mycompany.com"/>
    ///         <SmtpHost value ="smtp.gmail.com"/>
    ///         <SmtpPort value ="587"/>
    ///         <EnableSsl value = "true"/>
    ///         <Username value ="username"/>
    ///         <Password value ="passord"/>
    ///         <Subject value ="URGENT! A fatal error condition has occured in myapplication"/>
    ///         <Header value = "This is a log message from myapplication"/>
    ///         <Footer value = "DO NOT REPLY ON THIS MESSAGE. THIS IS A AUTOGENERATED MAILMESSAGE FROM MYAPPLICATION"/>
    ///     </Sink>
    /// </LogDotNet>
    ///     ]]>
    /// </code>
    /// 
    /// </example>
    /// <remarks>
    /// If the application resides on a computer already set up against a smtp server on the loval area network,
    /// you can usually omit the Username,Password, SmtpPort and EnableSsl configuration elements.
    /// </remarks>
    /// 
    internal class SmtpLogSink : LogSink
    {
        #region Member Variables

        /// <summary>
        /// The senders mailadress
        /// </summary>
        private string mFromAddress = "";
        
        /// <summary>
        /// The mail address to send the mail message to
        /// </summary> 
        private string mToAddress = "";
        
        /// <summary>
        /// The subject of the mail message
        /// </summary>
        private string mSubject = "";
        /// <summary>
        /// The smtp hostname
        /// </summary>
        private string mSmtpHost = "";
        /// <summary>
        /// The port number to be used on the smtp server
        /// </summary>
        private int mSmtpPort;
        
        /// <summary>
        /// The header of the mail message
        /// </summary>
        private string mHeader = "";
        
        /// <summary>
        /// The footer of the mail message
        /// </summary>
        private string mFooter = "";

        /// <summary>
        /// Indicates use of Secure Sockets Layer
        /// </summary>
        private bool mEnableSsl;

        /// <summary>
        /// The username used to connect to the smtp server
        /// </summary>
        private string mUsername = "";

        /// <summary>
        /// The password used to connect to the smptp server 
        /// </summary>
        private string mPassword = "";

        #endregion

        #region Internal Properties

        /// <summary>
        /// The password used to connect to the smtp server
        /// </summary>
        internal string Password
        {
            get { return mPassword; }
            set { mPassword = value; }
        }
	
        /// <summary>
        /// The username used to connect to the smtp server
        /// </summary>
        internal string UserName
        {
            get { return mUsername; }
            set { mUsername = value; }
        }
	
        /// <summary>
        /// Set this to true top enable secure socket layer
        /// </summary>
        internal bool EnableSsl
        {
            get { return mEnableSsl; }
            set { mEnableSsl = value; }
        }
	
        /// <summary>
        /// The port number of the smtp server
        /// </summary>
        internal int SmtpPort
        {
            get { return mSmtpPort; }
            set { mSmtpPort = value; }
        }

	    /// <summary>
	    /// The text to appear at the end of the mail message
	    /// </summary>
        internal string Footer
        {
            get { return mFooter; }
            set { mFooter = value; }
        }
	
        /// <summary>
        /// The text to apprear in the beginning of the mail messsage
        /// </summary>
        internal string Header
        {
            get { return mHeader; }
            set { mHeader  = value; }
        }
	
        /// <summary>
        /// The smtp host name
        /// </summary>
        internal string SmtpHost
        {
            get { return mSmtpHost; }
            set { mSmtpHost = value; }
        }
       
        /// <summary>
        /// The subject of the mail message
        /// </summary>
        internal string Subject
        {
            get { return mSubject; }
            set { mSubject = value; }
        }
	
        /// <summary>
        /// The senders mailadress
        /// </summary>
        internal string FromAddress
        {
            get { return mFromAddress; }
            set { mFromAddress = value; }
        }

        /// <summary>
        /// The mail address to send the mail message to
        /// </summary>
        internal string ToAddress
        {
            get { return mToAddress; }
            set { mToAddress = value; }
        }

        #endregion

        #region Override Methods
        /// <summary>
        /// Logs the <see cref="LogItem"/> using a Smtp Client
        /// </summary>
        /// <param name="logItem">The <see cref="LogItem"/> to sink</param>
        internal override void WriteLog(LogItem logItem)
        {
            SmtpClient client = new SmtpClient();
            client.Host = mSmtpHost;
            client.Port = mSmtpPort;
            client.EnableSsl = mEnableSsl;

            //If the username or password has been supplied,
            //we new network credentials
            if (mUsername.Length > 0 | mPassword.Length > 0)
            {
                client.Credentials = new NetworkCredential(mUsername, mPassword);
            }

            //Create the mail message body
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(mHeader);
            sb.Append(logItem.ToString());
            sb.AppendLine(mFooter);

            try
            {
                //Send the message
                using (MailMessage message = new MailMessage(mFromAddress, mToAddress, mSubject, sb.ToString()))
                {
                    client.Send(message);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());                
            }
        }
        #endregion
    }
}
